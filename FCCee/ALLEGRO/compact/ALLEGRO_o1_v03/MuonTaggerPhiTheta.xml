<?xml version="1.0" encoding="UTF-8"?>
<lccdd xmlns:compact="http://www.lcsim.org/schemas/compact/1.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xs:noNamespaceSchemaLocation="http://www.lcsim.org/schemas/compact/1.0/compact.xsd">

  <info name="FCCeeMuonTagger"
        title="Muon Tagger for ALLEGRO, with phi-theta segmentation"
        author="Created by A. Duglishvili from MuonTagger.xml, moving from eta to theta segmentation. Further mods by G. Marchiori to allow longitudinal layers"
        url="no"
        status="development"
        version="1.0">
    <comment>
      Simple muon tagger with phi-theta segmentation - barrel and endcaps. The detector is a simple cylinder of plastic scintillator.
    </comment>
  </info>

  <define>
    <!-- define here the number of radial (barrel) or longitudinal, z (endcap) layers into which the overall cylinder(s) will be segmented -->
    <constant name="MuonTaggerBarrelLayers" value="2"/>
    <constant name="MuonTaggerEndcapLayers" value="2"/>
  </define>

  <display>
    <vis name="muon_vis" r="1.0" g="0.1" b="0.1" showDaughters="true" visible="true" />
  </display> 
  
  <readouts>
    <readout name="MuonTaggerBarrelPhiTheta">
      <!-- the phi binning is the same as in MuonTagger.xml -->
      <!-- the theta offset (which sets the acceptance of the readout) was initially calculated from the eta offset of MuonTagger.xml -->
      <!-- and slightly rounded so that the number of theta bins is integer. The theta width was set to 0.5 degrees giving a total of
           336 bins (for MuonTagger it was 582 bins of delta_eta = 0.01). As this is not more than a "toy" muon detector this should be
           OK for the moment - more refined geometry models and segmentations will be implemented when ready -->
      <segmentation type="FCCSWGridPhiTheta_k4geo" phi_bins="704" offset_phi="-pi+(pi/704.)" grid_size_theta="0.0087266" offset_theta="0.1047277"/>
      <id>system:4,subsystem:1,layer:5,theta:10,phi:10</id>
    </readout>
    <readout name="MuonTaggerEndcapPhiTheta">
      <segmentation type="FCCSWGridPhiTheta_k4geo" phi_bins="704" offset_phi="-pi+(pi/704.)" grid_size_theta="0.0087266" offset_theta="0.1047277"/>
      <id>system:4,subsystem:1,layer:5,theta:10,phi:10</id>
    </readout>
  </readouts>

  <detectors>
    <!-- barrel -->
    <detector id="DetID_Muon_Barrel" name="MuonTaggerBarrel" type="SimpleCylinder_o1_v02" sensitive="true" vis="muon_vis" readout="MuonTaggerBarrelPhiTheta">
      <!-- added for Pandora -->
      <type_flags type="DetType_CALORIMETER + DetType_MUON + DetType_BARREL"/>
      <!-- end -->
      <!-- sensitive type="SimpleTrackerSD"/ -->
      <!-- use calorimeter sensitive detector for scintillator - this is needed since PandoraPFA expects muon sim hits to be of type SimCaloHit -->
      <sensitive type="BirksLawCalorimeterSD"/>
      <dimensions rmin="MuonTagger_inner_radius" rmax="MuonTagger_outer_radius"
                  dz="MuonTagger_half_length" z_offset = "0" material="Polystyrene" phi0="0" deltaphi="360*deg" vis="muon_vis"/>
      <layers>
        <layer thickness="(MuonTagger_outer_radius - MuonTagger_inner_radius)/MuonTaggerBarrelLayers" repeat="MuonTaggerBarrelLayers"/>
      </layers>
    </detector>

    <!-- endcaps -->
    <detector id="DetID_Muon_Endcap_1" name="MuonTaggerEndcap" type="SimpleCylinder_o1_v02" sensitive="true" vis="muon_vis" readout="MuonTaggerEndcapPhiTheta">
      <!-- added for Pandora -->
      <type_flags type="DetType_CALORIMETER + DetType_MUON + DetType_ENDCAP"/>
      <!-- end -->
      <sensitive type="SimpleTrackerSD"/>
      <dimensions rmin="MuonTaggerEndcap_inner_radius" rmax="MuonTaggerEndcap_outer_radius"
                  dz="(MuonTaggerEndcap_max_z - MuonTaggerEndcap_min_z)*0.5" z_offset = "MuonTaggerEndcap_min_z + (MuonTaggerEndcap_max_z - MuonTaggerEndcap_min_z)*0.5" material="Polystyrene" phi0="0" deltaphi="360*deg" vis="muon_vis"/>
      <layers>
        <layer thickness="(MuonTaggerEndcap_max_z - MuonTaggerEndcap_min_z)/MuonTaggerEndcapLayers" repeat="MuonTaggerEndcapLayers"/>
      </layers>
    </detector>
    
  </detectors>

</lccdd>
