name: Material Scan Report

on:
  workflow_run:
    workflows: ["MaterialScan Comparison"]
    types:
      - completed

jobs:
  post_comment:
    if: github.event.workflow_run.event == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const runId = context.payload.workflow_run.id;
            
            // Artifacts are definitely available after workflow completion
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
            });
            
            const histcmpArtifact = artifacts.data.artifacts.find(artifact => 
              artifact.name === 'histcmp-results'
            );
            
            if (!histcmpArtifact) {
              console.log('No histcmp-results artifact found');
              return;
            }
            
            const url = `https://test-key4hep-validation.app.cern.ch/view?repo=${context.repo.owner}/${context.repo.repo}&id=${histcmpArtifact.id}`;
            
            // Get PR number from the original workflow
            const prNumber = context.payload.workflow_run.pull_requests[0]?.number;
            if (!prNumber) {
              console.log('No PR number found');
              return;
            }
            
            const comment = `# ðŸ“Š Material Budget Comparison Results\n\nðŸ”— **[View Interactive Results](${url})**\n\n*Analysis complete! Click the link above to view detailed material budget comparisons.*`;

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Material Budget Comparison Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }